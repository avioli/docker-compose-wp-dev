version: '2'

# CONFIGURATION NOTES:
# 
#  * aws-theme: If you have your theme in a repo, then you can use the
#               `aws-theme` container to clone it automatically via the REPO or
#               REPO_NAME variables.
#
#  * wordpress: Comment or remove the `aws-theme` dependency, plus the ./vendor
#               volume, if you are not going to use the above container.
#
#               If you edit your `/etc/hosts` file and want to run multiple
#               websites at once, then edit WP_HOME variable to point to the
#               desired domain name from your hosts file.
#
#  * db: If you want to use different credentials, then make sure to update
#        the ones in the `wordpress` container as well.
#
#  * nginx: In case you run multiple websites at once, but you leave them at
#           `localhost`, then you have to have a different port for each of
#           them.
#           
#           If you have multiple configurations with different ports, then you
#           will have to expose them under `ports`.
services:
  aws-theme:
    build: ./docker-compose/aws-theme
    volumes:
      - ~/.ssh:/root/.ssh
      - .:/project
    environment:
      REPO: "ssh://git-codecommit.us-east-1.amazonaws.com/v1/repos/wp-theme-..." # add theme name or use below
      # REPO_NAME: wp-theme-...
      # AWS_DEFAULT_REGION: us-east-1

  wordpress:
    depends_on:
      - aws-theme
      - db
    image: wordpress:4.7-php7.0-fpm
    # build: ./docker-compose/custom-wp
    volumes:
      - ./wp-content:/var/www/html/wp-content
      - ./docker-compose/wp-dev:/var/www/html/wp-dev
      - ./docker-compose/wp-dev/apache2-hack--wp-dev-inject.sh:/usr/local/bin/apache2-hack--wp-dev-inject.sh
      - ./vendor:/var/www/html/vendor
    command: ["apache2-hack--wp-dev-inject.sh"]
    links:
      - db
    # restart: always
    environment:
      MYSQL_PORT_3306_TCP: "tcp://db:3306"
      WORDPRESS_DB_HOST: db:3306
      WORDPRESS_DB_NAME: wordpress                                             # essentially copy the db parameters
      WORDPRESS_DB_USER: wordpress
      WORDPRESS_DB_PASSWORD: wordpress
      # WORDPRESS_TABLE_PREFIX: ""                                             # only set if you need to override the default one - "wp_"
      # === wp-dev ===
      # WP_HOME: "http://localhost:8080"
      # WP_SITEURL: ""                                                         # defaults to WP_HOME
      # WP_HOME_REPLACE_FROM: "http://www.domain.com"                          # replace _this string_ in the rendered output with WP_HOME (no trailing slash)
      # DISABLE_WP_CRON: 1                                                     # defaults to 0 (false)
      # WP_CORE_DIR: "/var/www/html"                                           # path to WordPress
      # === fetch ===
      # FETCH_ENABLED: 1
      # FETCH_REMOTE_SERVER_UPLOADS_URL: "http://domain.com.au/wp-content/uploads/"
      # FETCH_FOR_ADMINS_ONLY: 0
      # FETCH_LIMIT_RESPONSE_SIZE: 20971520                                    # 20 mega bytes
      # FETCH_LIMIT_RESPONSE_TIME: 60                                          # 60 seconds

  db:
    image: mariadb:10.1
    volumes:
      - ./var/db:/var/lib/mysql
      - ./db:/docker-entrypoint-initdb.d
    # restart: always
    environment:
      MYSQL_ROOT_PASSWORD: root_password
      MYSQL_DATABASE: wordpress
      MYSQL_USER: wordpress
      MYSQL_PASSWORD: wordpress

  nginx:
    depends_on:
      - wordpress
    image: nginx:1.11
    volumes_from:
      - wordpress
    volumes:
      - ./docker-compose/nginx/conf.d:/etc/nginx/conf.d
    links:
      - wordpress
    ports:
      - "8080:80"
    # restart: always

